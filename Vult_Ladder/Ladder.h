
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef LADDER_H
#define LADDER_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "Ladder.tables.h"

typedef struct Ladder__ctx_type_0 {
   fix16_t pre_x;
} Ladder__ctx_type_0;

typedef Ladder__ctx_type_0 Ladder_change_type;

static_inline void Ladder__ctx_type_0_init(Ladder__ctx_type_0 &_output_){
   Ladder__ctx_type_0 _ctx;
   _ctx.pre_x = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void Ladder_change_init(Ladder__ctx_type_0 &_output_){
   Ladder__ctx_type_0_init(_output_);
   return ;
}

static_inline uint8_t Ladder_change(Ladder__ctx_type_0 &_ctx, fix16_t x){
   uint8_t v;
   v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

static_inline fix16_t Ladder_cubic_clipper(fix16_t x){
   if(x <= -0xaaaa /* -0.666667 */){
      return -0xaaaa /* -0.666667 */;
   }
   else
   {
      if(x >= 0xaaaa /* 0.666667 */){
         return 0xaaaa /* 0.666667 */;
      }
      else
      {
         return (x + fix_mul(fix_mul(fix_mul(-0x5555 /* -0.333333 */,x),x),x));
      }
   }
};

static_inline fix16_t Ladder_cvToPitch(fix16_t cv){
   return (0x180000 /* 24.000000 */ + fix_mul(0x780000 /* 120.000000 */,cv));
};

static_inline fix16_t Ladder_cvTokHz_raw_c0(int index){
   return Ladder_cvTokHz_c0[index];
};

static_inline fix16_t Ladder_cvTokHz_raw_c1(int index){
   return Ladder_cvTokHz_c1[index];
};

static_inline fix16_t Ladder_cvTokHz_raw_c2(int index){
   return Ladder_cvTokHz_c2[index];
};

static_inline fix16_t Ladder_cvTokHz(fix16_t cv){
   int index;
   index = int_clip(fix_to_int(fix_mul(0x1f0000 /* 31.000000 */,cv)),0,31);
   return (fix_wrap_array(Ladder_cvTokHz_c0)[index] + fix_mul(cv,(fix_wrap_array(Ladder_cvTokHz_c1)[index] + fix_mul(cv,fix_wrap_array(Ladder_cvTokHz_c2)[index]))));
}

static_inline fix16_t Ladder_tune_raw_c0(int index){
   return Ladder_tune_c0[index];
};

static_inline fix16_t Ladder_tune_raw_c1(int index){
   return Ladder_tune_c1[index];
};

static_inline fix16_t Ladder_tune_raw_c2(int index){
   return Ladder_tune_c2[index];
};

static_inline fix16_t Ladder_tune(fix16_t cut){
   int index;
   index = int_clip(fix_to_int(fix_mul(0x7f0000 /* 127.000000 */,cut)),0,127);
   return (fix_wrap_array(Ladder_tune_c0)[index] + fix_mul(cut,(fix_wrap_array(Ladder_tune_c1)[index] + fix_mul(cut,fix_wrap_array(Ladder_tune_c2)[index]))));
}

typedef struct Ladder__ctx_type_11 {
   fix16_t p3;
   fix16_t p2;
   fix16_t p1;
   fix16_t p0;
} Ladder__ctx_type_11;

typedef Ladder__ctx_type_11 Ladder_heun_type;

void Ladder__ctx_type_11_init(Ladder__ctx_type_11 &_output_);

static_inline void Ladder_heun_init(Ladder__ctx_type_11 &_output_){
   Ladder__ctx_type_11_init(_output_);
   return ;
}

fix16_t Ladder_heun(Ladder__ctx_type_11 &_ctx, fix16_t input, fix16_t fh, fix16_t res);

typedef struct Ladder__ctx_type_12 {
   fix16_t p3;
   fix16_t p2;
   fix16_t p1;
   fix16_t p0;
} Ladder__ctx_type_12;

typedef Ladder__ctx_type_12 Ladder_euler_type;

void Ladder__ctx_type_12_init(Ladder__ctx_type_12 &_output_);

static_inline void Ladder_euler_init(Ladder__ctx_type_12 &_output_){
   Ladder__ctx_type_12_init(_output_);
   return ;
}

fix16_t Ladder_euler(Ladder__ctx_type_12 &_ctx, fix16_t input, fix16_t fh, fix16_t res);

typedef struct Ladder__ctx_type_13 {
   fix16_t fh;
   Ladder__ctx_type_12 e;
   Ladder__ctx_type_0 _inst1f5;
} Ladder__ctx_type_13;

typedef Ladder__ctx_type_13 Ladder_process_euler_type;

void Ladder__ctx_type_13_init(Ladder__ctx_type_13 &_output_);

static_inline void Ladder_process_euler_init(Ladder__ctx_type_13 &_output_){
   Ladder__ctx_type_13_init(_output_);
   return ;
}

fix16_t Ladder_process_euler(Ladder__ctx_type_13 &_ctx, fix16_t input, fix16_t cut, fix16_t res);

typedef struct Ladder__ctx_type_14 {
   Ladder__ctx_type_11 h;
   fix16_t fh;
   Ladder__ctx_type_0 _inst1f5;
} Ladder__ctx_type_14;

typedef Ladder__ctx_type_14 Ladder_process_heun_type;

void Ladder__ctx_type_14_init(Ladder__ctx_type_14 &_output_);

static_inline void Ladder_process_heun_init(Ladder__ctx_type_14 &_output_){
   Ladder__ctx_type_14_init(_output_);
   return ;
}

fix16_t Ladder_process_heun(Ladder__ctx_type_14 &_ctx, fix16_t input, fix16_t cut, fix16_t res);

typedef struct Ladder__ctx_type_15 {
   Ladder__ctx_type_14 _inst112;
} Ladder__ctx_type_15;

typedef Ladder__ctx_type_15 Ladder_process_type;

static_inline void Ladder__ctx_type_15_init(Ladder__ctx_type_15 &_output_){
   Ladder__ctx_type_15 _ctx;
   Ladder__ctx_type_14_init(_ctx._inst112);
   _output_ = _ctx;
   return ;
}

static_inline void Ladder_process_init(Ladder__ctx_type_15 &_output_){
   Ladder__ctx_type_15_init(_output_);
   return ;
}

static_inline fix16_t Ladder_process(Ladder__ctx_type_15 &_ctx, fix16_t input, fix16_t cut, fix16_t res){
   return Ladder_process_heun(_ctx._inst112,input,cut,res);
};



#endif // LADDER_H
