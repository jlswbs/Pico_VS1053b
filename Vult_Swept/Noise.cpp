
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "Noise.h"

fix16_t Noise_pinker(Noise__ctx_type_0 &_ctx, fix16_t x){
   fix16_t b0;
   b0 = 0x718 /* 0.027713 */;
   fix16_t b1;
   b1 = 0x718 /* 0.027713 */;
   fix16_t a1;
   a1 = -0xf1cf /* -0.944574 */;
   fix16_t w0;
   w0 = (x + (- fix_mul(_ctx.w1,a1)));
   fix16_t y0;
   y0 = (fix_mul(_ctx.w1,b1) + fix_mul(b0,w0));
   _ctx.w1 = w0;
   return y0;
}

void Noise__ctx_type_1_init(Noise__ctx_type_1 &_output_){
   Noise__ctx_type_1 _ctx;
   _ctx.x2 = 0;
   _ctx.x1 = 0;
   Noise__ctx_type_0_init(_ctx._inst190);
   _output_ = _ctx;
   return ;
}

fix16_t Noise_process(Noise__ctx_type_1 &_ctx, fix16_t color){
   _ctx.x1 = ((7919 + (17389 * _ctx.x1)) % 32768);
   fix16_t y1;
   y1 = fix_mul(0x2 /* 0.000031 */,int_to_fix(_ctx.x1));
   _ctx.x2 = ((12553 + (27449 * _ctx.x2)) % 32768);
   fix16_t y2;
   y2 = fix_mul(0x2 /* 0.000031 */,int_to_fix(_ctx.x2));
   fix16_t out;
   if(color > 0x8000 /* 0.500000 */){
      out = Noise_pinker(_ctx._inst190,(y1 + (- y2)));
   }
   else
   {
      out = (y1 + (- y2));
   }
   return (out << 1);
}


