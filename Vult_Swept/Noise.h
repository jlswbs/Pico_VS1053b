
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef NOISE_H
#define NOISE_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"

typedef struct Noise__ctx_type_0 {
   fix16_t w1;
} Noise__ctx_type_0;

typedef Noise__ctx_type_0 Noise_pinker_type;

static_inline void Noise__ctx_type_0_init(Noise__ctx_type_0 &_output_){
   Noise__ctx_type_0 _ctx;
   _ctx.w1 = 0x0 /* 0.000000 */;
   _output_ = _ctx;
   return ;
}

static_inline void Noise_pinker_init(Noise__ctx_type_0 &_output_){
   Noise__ctx_type_0_init(_output_);
   return ;
}

fix16_t Noise_pinker(Noise__ctx_type_0 &_ctx, fix16_t x);

typedef struct Noise__ctx_type_1 {
   int x2;
   int x1;
   Noise__ctx_type_0 _inst190;
} Noise__ctx_type_1;

typedef Noise__ctx_type_1 Noise_process_type;

void Noise__ctx_type_1_init(Noise__ctx_type_1 &_output_);

static_inline void Noise_process_init(Noise__ctx_type_1 &_output_){
   Noise__ctx_type_1_init(_output_);
   return ;
}

fix16_t Noise_process(Noise__ctx_type_1 &_ctx, fix16_t color);



#endif // NOISE_H
